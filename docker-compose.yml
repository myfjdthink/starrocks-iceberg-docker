version: '3.9'
services:

  minio:
    hostname: minio
    image: 'minio/minio'
    container_name: minio
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - ./data/minio:/data
    environment:
      - MINIO_ROOT_USER=minio
      - MINIO_ROOT_PASSWORD=minio123
    command: server /data --console-address ":9001"
    networks:
      - ndsnet
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 5s
      timeout: 5s
      retries: 5

  mc:
    image: minio/mc
    container_name: mc
    hostname: mc
    environment:
      - AWS_ACCESS_KEY_ID=minio
      - AWS_SECRET_ACCESS_KEY=minio123
      - AWS_REGION=us-east-1
    networks:
      - ndsnet
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc config host add minio http://minio:9000 minio minio123) do echo '...waiting...' && sleep 1; done;
      /usr/bin/mc mb minio/warehouse;
      /usr/bin/mc policy set public minio/warehouse;
      exit 0;
      "
    depends_on:
      minio:
        condition: service_healthy

  trino:
    image: trinodb/trino:425
    container_name: trino
    volumes:
      - ./trino/catalog:/etc/trino/catalog
    ports:
      - '8060:8080'
    depends_on:
      minio:
        condition: service_healthy

  starrocks:
    image: starrocks/allin1-ubuntu:3.1.2
    container_name: starrocks
    ports:
      - '9030:9030'
      - '8030:8030'
      - '8040:8040'
    depends_on:
      minio:
        condition: service_healthy
networks:
  ndsnet:
    name: star_net
    driver: bridge
